/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package users.engineer;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import main.rem.otdel.ListenerCloseForm;
import main.rem.otdel.MainRemOtdel;

/**
 *
 * @author tigler
 */
public class AddUpdateDetailFromStore extends javax.swing.JFrame {

    /**
     * Creates new form AddUpdateDetailFromStore
     */
    private int addOrUpdate;
    private int PK;
    private int PKStorekeeper;
    private ListenerCloseForm listenerCloseForm;
    private ArrayList<String> pkDetail;
    private ArrayList<String> valuedetail;

    public AddUpdateDetailFromStore(int addOrUpdate, int PK,int PKStorekeeper) {
        initComponents();
        this.addOrUpdate = addOrUpdate;
        this.PK = PK;
        this.PKStorekeeper=PKStorekeeper;

        try {

            pkDetail = new ArrayList<String>();
            valuedetail = new ArrayList<String>();
            ResultSet resSet = null;

            resSet = MainRemOtdel.st.executeQuery("select pk_detailFromwh,pk_detail,amount,location from detailfromwarehouse"
                    + " where pk_detailFromwh=" + PK);
            String pkDetailForUpdate = null;
            try {
                if (resSet.next()) {
                    pkDetailForUpdate = resSet.getString(2);
                    jSpinnerAmount.setValue(resSet.getInt(3));
                    jTextFieldLocation.setText(resSet.getString(4));
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Ошибка: Невозможно изменить");
                this.dispose();
            }

            resSet = MainRemOtdel.st.executeQuery("select pk_detail,nameofdetail from detail");
            int indCombobox = 0;
            while (resSet.next()) {
                pkDetail.add(resSet.getString(1));
                valuedetail.add(resSet.getString(2));
                jComboBoxDetail.addItem(resSet.getString(2));
                if (resSet.getString(1).equals(pkDetailForUpdate)) {
                    jComboBoxDetail.setSelectedIndex(indCombobox);
                }
                indCombobox++;
            }
            if (addOrUpdate == 0) {
                jComboBoxDetail.setSelectedIndex(-1);
            } else {
                jButtonAddUpdate.setText("Изменить");
                this.setTitle("Изменить деталь на складе");
            }

        } catch (SQLException ex) {
            Logger.getLogger(AddUpdateDetailFromStore.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void setListenerCloseForm(ListenerCloseForm listenerCloseForm) {
        this.listenerCloseForm = listenerCloseForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxDetail = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerAmount = new javax.swing.JSpinner();
        jTextFieldLocation = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jButtonAddUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Добавить детали на склад");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Деталь");

        jLabel2.setText("Колличество");

        jLabel3.setText("Расположение");

        jButtonCancel.setText("Отмена");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonAddUpdate.setText("Добавить");
        jButtonAddUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(58, 58, 58)
                                    .addComponent(jComboBoxDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jSpinnerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAddUpdate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinnerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonAddUpdate))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        listenerCloseForm.event();
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonAddUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUpdateActionPerformed
        // TODO add your handling code here:
        if (addOrUpdate == 0) {
            String textLoc = jTextFieldLocation.getText();
            int indComboDetail = jComboBoxDetail.getSelectedIndex();
            int amount = Integer.parseInt(jSpinnerAmount.getValue().toString());
            if (textLoc.equals("") || indComboDetail==-1 || amount<=0) {
                JOptionPane.showMessageDialog(this, "Некорректные данные");
            } else {
                try {
                    MainRemOtdel.st.executeQuery("Insert into SERVERADM.detailfromwarehouse"
                            + " (pk_detail,amount,location,pk_storekeeper) values"
                            + " ('" + pkDetail.get(indComboDetail) + "', " + "'" + amount + "','" + textLoc + "','"+PKStorekeeper+"')");
                    JOptionPane.showMessageDialog(this, "Запись успешно добавлена");
                    listenerCloseForm.event();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Ошибка: Невозможно добавить");

                }
                this.dispose();
            }
        } else {
            if (addOrUpdate == 1) {
                String textLoc = jTextFieldLocation.getText();
                int indComboDetail = jComboBoxDetail.getSelectedIndex();
                int amount = Integer.parseInt(jSpinnerAmount.getValue().toString());
                if (textLoc.equals("")|| indComboDetail==-1 || amount<=0) {
                    JOptionPane.showMessageDialog(this, "Некорректные данные");
                } else {
                    try {
                        MainRemOtdel.st.executeQuery("UPDATE SERVERADM.detailfromwarehouse"
                                + " SET PK_detail = '" + pkDetail.get(indComboDetail) + "',"
                                + " amount = '" + amount + "',"
                                + " location = '" + textLoc + "'"
                                + " WHERE PK_detailfromwh=" + PK);
                        JOptionPane.showMessageDialog(this, "Запись успешно изменена");
                        listenerCloseForm.event();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Ошибка: Невозможно изменить");
                    }
                    this.dispose();
                }
            }

        }
    }//GEN-LAST:event_jButtonAddUpdateActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        listenerCloseForm.event();
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddUpdate;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JComboBox<String> jComboBoxDetail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner jSpinnerAmount;
    private javax.swing.JTextField jTextFieldLocation;
    // End of variables declaration//GEN-END:variables
}
